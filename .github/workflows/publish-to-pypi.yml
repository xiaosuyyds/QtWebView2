name: Publish Python Package

on:
  release:
    types: [published] # 当一个 Release 被发布时触发

jobs:
  release-build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools wheel
          # requirements.txt 在 Windows runner 上可以被正确安装
          # 确保 requirements.txt 里包含了 pywin32, pythonnet, qtpy
          python -m pip install -r requirements.txt

      - name: Validate version match
        shell: pwsh
        run: |
          $pyprojectVersion = (Select-String -Path pyproject.toml -Pattern 'version = "(.+?)"').Matches.Groups[1].Value
          $gitTag = "${{ github.ref }}".Split('/')[-1]
          $gitTagVersion = $gitTag.TrimStart('v')
          if ($pyprojectVersion -ne $gitTagVersion) {
            Write-Error "Version mismatch: pyproject.toml=$pyprojectVersion vs tag=$gitTag"
            exit 1
          }
          Write-Host "Versions match: $pyprojectVersion"

      - name: Build release distributions
        run: |
          python -m build --outdir dist/

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/qtwebview2/

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
